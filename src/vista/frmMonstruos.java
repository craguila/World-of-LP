/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.Monstruo;
import controlador.Personaje;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import static vista.Juego.monstruos;
import static vista.Juego.ventanaHabilidades;
import static vista.Juego.ventanaInventario;
import static vista.Juego.ventanaMonstruos;
import static vista.Juego.ventanaStats;


public class frmMonstruos extends javax.swing.JFrame {
    /**
     * Creates new form frmMonstruos
     */
    Personaje p;
    public frmMonstruos(Personaje p) {
        initComponents();
        this.p=p;
        Juego.jugador.releaseTeclado();
        setEstado();
    }
    
    public void setEstado() {
        DefaultTableModel mdl =(DefaultTableModel)this.tblMonstruos.getModel();
        mdl.setRowCount(0);
        p.buscarmonstruos();
        for(String nombre:p.getMonsruosVisibles()){
            Object data[]={nombre};
            mdl.addRow(data);
        }
        this.tblMonstruos.setModel(mdl);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMonstruos = new javax.swing.JTable();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        tblMonstruos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMonstruos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMonstruosMouseClicked(evt);
            }
        });
        tblMonstruos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblMonstruosKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblMonstruos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public void despuesdeatacar(){

            for(Monstruo m: monstruos){
                m.actualizar(); 
            }
            ArrayList<Monstruo>muertos=new ArrayList<>();
            for(Monstruo m: monstruos){
                if(!m.vivo()){
                    muertos.add(m);
                } 
            }
            for(Monstruo m: muertos){
                monstruos.remove(m); 
            }
            Juego.actualizaciones += 15;
            ventanaStats.setEstado();
            ventanaHabilidades.setEstado();
            ventanaMonstruos.setEstado();
            ventanaInventario.setEstado();
        }
    private void tblMonstruosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMonstruosMouseClicked
        try{
            String objetivo=tblMonstruos.getValueAt(tblMonstruos.getSelectedRow(), 0).toString();
            for(Monstruo m:Juego.monstruos){
                if(m.getNombre().equals(objetivo)){
                    if (Juego.jugador.vivo()){
                    Juego.setConsole("Jugador ataco a "+objetivo+"-vida: "+m.getVida());
                    m.danar(Juego.jugador.getStats().getFuerza());
                    despuesdeatacar();
                    }
                    break; 

                }
            }
        }
            catch(Exception e){
            }
    }//GEN-LAST:event_tblMonstruosMouseClicked

    private void tblMonstruosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblMonstruosKeyPressed
        Juego.ventana.setVisible(true);
    }//GEN-LAST:event_tblMonstruosKeyPressed

    public javax.swing.JTable getMonstruos(){
        return tblMonstruos;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblMonstruos;
    // End of variables declaration//GEN-END:variables

    
}
